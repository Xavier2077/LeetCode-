class MyCircularDeque {
public:
    vector<int> arr;
    int head;
    int tail;
    int size;
    int capacity;
    MyCircularDeque(int k):arr(k),head(0),tail(0),size(0),capacity(k) 
    {}
    
    bool insertFront(int value) {
        if(this->isFull())
        {
            return false;
        }
        head = (head - 1 + capacity) % capacity;
        arr[head] = value;
        ++size;
        return true;
    }
    
    bool insertLast(int value) {
        if(this->isFull())
        {
            return false;
        }
        arr[tail] = value;
        tail = (tail + 1 + capacity) % capacity;
        ++size;
        return true; 
    }
    
    bool deleteFront() {
        if(this->isEmpty())
        {
            return false;
        }
        head = (head + 1) % capacity;
        --size;
        return true;
    }
    
    bool deleteLast() {
        if(this->isEmpty())
        {
            return false;
        }
        tail = (tail - 1 + capacity) % capacity;
        --size;
        return  true;
    }
    
    int getFront() {
        if(this->isEmpty())
        {
            return -1;
        }
        return arr[head];
    }
    
    int getRear() {
        if(this->isEmpty())
        {
            return -1;
        }
        return arr[(tail - 1 + capacity) % capacity];
    }
    
    bool isEmpty() {
        if(size == 0)
        {
            return true;
        }
        return false;
    }
    
    bool isFull() {
        if(size == capacity)
        {
            return true;
        }
        return false;
    }
};
